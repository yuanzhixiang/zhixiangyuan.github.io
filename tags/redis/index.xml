<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on Yuanzx Blog</title>
    <link>https://zhixiangyuan.github.io/tags/redis/</link>
    <description>Recent content in redis on Yuanzx Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>yuanzx</copyright>
    <lastBuildDate>Thu, 10 Oct 2019 14:22:00 +0800</lastBuildDate>
    
	<atom:link href="https://zhixiangyuan.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis 中的 HyperLogLog</title>
      <link>https://zhixiangyuan.github.io/post/hovel/redis-%E4%B8%AD%E7%9A%84-hyperloglog/</link>
      <pubDate>Thu, 10 Oct 2019 14:22:00 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/post/hovel/redis-%E4%B8%AD%E7%9A%84-hyperloglog/</guid>
      <description>HyperLogLog 并不是数据结构而是一种基数算法，通过 HyperLogLog 可以利用极小的内存空间完成独立总数的统计，数据集可以是 IP、Email、ID 等。HyperLogLo</description>
    </item>
    
    <item>
      <title>Redis 中的 Bitmaps</title>
      <link>https://zhixiangyuan.github.io/post/hovel/redis-%E4%B8%AD%E7%9A%84-bitmaps/</link>
      <pubDate>Thu, 10 Oct 2019 12:47:37 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/post/hovel/redis-%E4%B8%AD%E7%9A%84-bitmaps/</guid>
      <description>1 存储 bitmap 的数据结构 其实就是普通的 string，只不过可以通过 bitmap 来操作二进制位为 0 或 1，比如说下面这个例子 1 2 3 4 5 6 7 8 # 先设置一个键值对 $redis-cli&amp;gt;set</description>
    </item>
    
    <item>
      <title>Redis 中的 Pipeline</title>
      <link>https://zhixiangyuan.github.io/post/hovel/redis-%E4%B8%AD%E7%9A%84-pipeline/</link>
      <pubDate>Thu, 10 Oct 2019 10:45:25 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/post/hovel/redis-%E4%B8%AD%E7%9A%84-pipeline/</guid>
      <description>1 为什么要有 pipeline 要了解这个问题首先需要了解 redis 性能瓶颈在哪里，其实，redis 性能问题很多时候在网络传输上，我来计算一下为什么会这样。首先 redis 客户</description>
    </item>
    
    <item>
      <title>Redis 提供的命令行工具</title>
      <link>https://zhixiangyuan.github.io/post/hovel/redis-%E6%8F%90%E4%BE%9B%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 09 Oct 2019 18:33:21 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/post/hovel/redis-%E6%8F%90%E4%BE%9B%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
      <description>1 redis-server 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 直接运行 $&amp;gt; redis-server # 可以在后面指定配置然后运行 $&amp;gt; redis-server --configKey1 configValue1 --configKey2 configValue2 # 比如说修改端口号 $&amp;gt; redis-server --port 4500 # 指定配置文件启动 $&amp;gt; redis-server</description>
    </item>
    
    <item>
      <title>Redis 慢查询相关配置与命令</title>
      <link>https://zhixiangyuan.github.io/post/hovel/redis-%E6%85%A2%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 09 Oct 2019 17:54:45 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/post/hovel/redis-%E6%85%A2%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%91%BD%E4%BB%A4/</guid>
      <description>1 相关配置 配置有两个，分别是 slowlog-log-slower-than 和 slowlog-max-len，两个配置的含义如下 slowlog-log-slower-than: 超过这个时间的查询为慢查询，时间单位为微秒 slowlog-max-len: 保存的慢查询</description>
    </item>
    
  </channel>
</rss>