<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Yuanzx Blog</title>
    <link>https://zhixiangyuan.github.io/tags/linux/</link>
    <description>Recent content in Linux on Yuanzx Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>yuanzx</copyright>
    <lastBuildDate>Wed, 13 Nov 2019 14:33:39 +0800</lastBuildDate>
    
	<atom:link href="https://zhixiangyuan.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>通过 ssh 配置公网主机端口到内网主机端口的映射</title>
      <link>https://zhixiangyuan.github.io/2019/11/13/%E9%80%9A%E8%BF%87-ssh-%E9%85%8D%E7%BD%AE%E5%85%AC%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%AB%AF%E5%8F%A3%E5%88%B0%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%98%A0%E5%B0%84/</link>
      <pubDate>Wed, 13 Nov 2019 14:33:39 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/13/%E9%80%9A%E8%BF%87-ssh-%E9%85%8D%E7%BD%AE%E5%85%AC%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%AB%AF%E5%8F%A3%E5%88%B0%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%98%A0%E5%B0%84/</guid>
      <description>1 公网主机的配置修改 ssh 连接到公网主机，修改 sshd 的配置文件 /etc/ssh/sshd_config，在配置文件中找到 #GatewayPorts no 将其改为 GatewayPorts yes，如果没</description>
    </item>
    
    <item>
      <title>反斜杠 r 与 反斜杠 n 的含义</title>
      <link>https://zhixiangyuan.github.io/2019/10/31/%E5%8F%8D%E6%96%9C%E6%9D%A0-r-%E4%B8%8E-%E5%8F%8D%E6%96%9C%E6%9D%A0-n-%E7%9A%84%E5%90%AB%E4%B9%89/</link>
      <pubDate>Thu, 31 Oct 2019 20:39:40 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/10/31/%E5%8F%8D%E6%96%9C%E6%9D%A0-r-%E4%B8%8E-%E5%8F%8D%E6%96%9C%E6%9D%A0-n-%E7%9A%84%E5%90%AB%E4%B9%89/</guid>
      <description>1 \r \n 的来历 在计算机还没有出现之前，有一种叫做电传打自己的东西，每秒钟可以打 10 个字符，每个字符 0.1 秒，但是他有一个问题，就是换行的时候需要 0.2 秒</description>
    </item>
    
    <item>
      <title>Linux 中的系统调用</title>
      <link>https://zhixiangyuan.github.io/2019/10/14/linux-%E4%B8%AD%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link>
      <pubDate>Mon, 14 Oct 2019 10:05:02 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/10/14/linux-%E4%B8%AD%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid>
      <description>1 系统调用 fork: 创建进程 execve: 执行任务 waitpid: 通过将子进程的进程号传给它来了解子进程运行是否完成，是否成功 brk: 分配一块与原来堆数据连在一起的内存空间 mmap: 分配一</description>
    </item>
    
    <item>
      <title>Shell 中的字符串处理</title>
      <link>https://zhixiangyuan.github.io/2019/10/13/shell-%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 13 Oct 2019 19:27:09 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/10/13/shell-%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</guid>
      <description>1 字符串截取 使用 %、# 实现字符串截取 1.1 % ${variable%pattern}，这种模式时，shell 在 variable 中查找，看它是否一给的模式 pattern 结尾，</description>
    </item>
    
    <item>
      <title>Shell 中的三目运算符</title>
      <link>https://zhixiangyuan.github.io/2019/10/13/shell-%E4%B8%AD%E7%9A%84%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sun, 13 Oct 2019 19:01:27 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/10/13/shell-%E4%B8%AD%E7%9A%84%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>shell 中的三目运算符有四种，分别是 :-、:+、:=、:?，下面分别举例 1 :- ${var:-string} 对于这种表达式表示若 $var 为空则使用 string 替换 ${var:-string}，</description>
    </item>
    
    <item>
      <title>Linux 基础 1</title>
      <link>https://zhixiangyuan.github.io/2019/10/12/linux-%E5%9F%BA%E7%A1%80-1/</link>
      <pubDate>Sat, 12 Oct 2019 13:04:55 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/10/12/linux-%E5%9F%BA%E7%A1%80-1/</guid>
      <description>useradd 1 2 3 4 5 # 新建用户 $&amp;gt; useradd &amp;lt;usrename&amp;gt; # 新建用户，并将用户加入指定的组 # 组名必须存在，否则会提示不存在 $&amp;gt; useradd &amp;lt;username&amp;gt; -g &amp;lt;groupname&amp;gt; passwd 1 2 3 4 # 更改当前用户的密码 $&amp;gt; passwd # 更</description>
    </item>
    
    <item>
      <title>命令行潜规则</title>
      <link>https://zhixiangyuan.github.io/2019/10/10/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%BD%9C%E8%A7%84%E5%88%99/</link>
      <pubDate>Thu, 10 Oct 2019 16:33:08 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/10/10/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%BD%9C%E8%A7%84%E5%88%99/</guid>
      <description>本文所述的内容适用于本博客的标记方式 符号 含义 尖括号 &amp;lt;&amp;gt; 必选参数，实际使用时应将其替换为所需要的参数 方括号 [] 可选参数，实际使用时应将其替换为所需</description>
    </item>
    
    <item>
      <title>Centos 配置无密登录</title>
      <link>https://zhixiangyuan.github.io/2019/01/17/centos-%E9%85%8D%E7%BD%AE%E6%97%A0%E5%AF%86%E7%99%BB%E5%BD%95/</link>
      <pubDate>Thu, 17 Jan 2019 20:34:37 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/01/17/centos-%E9%85%8D%E7%BD%AE%E6%97%A0%E5%AF%86%E7%99%BB%E5%BD%95/</guid>
      <description>生成密钥方法 ssh-keygen -t rsa // 一路回车 cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys 配置权限 chmod 700 /home/hadoop chmod 700 -R ~/.ssh chmod 600 authorized_keys</description>
    </item>
    
    <item>
      <title>关于 sshd 的坑</title>
      <link>https://zhixiangyuan.github.io/2019/01/16/%E5%85%B3%E4%BA%8E-sshd-%E7%9A%84%E5%9D%91/</link>
      <pubDate>Wed, 16 Jan 2019 20:30:59 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/01/16/%E5%85%B3%E4%BA%8E-sshd-%E7%9A%84%E5%9D%91/</guid>
      <description>1 sshd 死都打不开 试试先用 /usr/sbin/sshd stop 关掉再 start 看看行不行 莫名其妙，直接运行 /usr/sbin/sshd 就好了 1.1 开启 sshd /usr/sbin/sshd start 1.2 sshd 的配置文件权限必须在 root 下为 600 才行 配置文件在 /etc/ssh 目录下，目</description>
    </item>
    
    <item>
      <title>Linux 下误删 Secure 文件，系统不记录日志问题</title>
      <link>https://zhixiangyuan.github.io/2019/01/13/linux-%E4%B8%8B%E8%AF%AF%E5%88%A0-secure-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%8D%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 13 Jan 2019 20:16:21 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/01/13/linux-%E4%B8%8B%E8%AF%AF%E5%88%A0-secure-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%8D%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98/</guid>
      <description>第一步创建文件 touch /var/log/secure 第二步修改权限 chmod 600 /var/log/secure 第三步重启服务 service sshd restart service syslog(rsyslog) restart 注意：如果不重启服务的话，原来的程序依然向被删除的文件中写入数据，那么新建的</description>
    </item>
    
    <item>
      <title>sed 小记</title>
      <link>https://zhixiangyuan.github.io/2018/10/04/sed-%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Thu, 04 Oct 2018 16:21:59 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2018/10/04/sed-%E5%B0%8F%E8%AE%B0/</guid>
      <description>1 sed 的工作流程 sed 逐行处理文件或输入，默认不会修改文件，除非使用 shell 重定向保存结果。 工作流程： 将正在处理的行保存在一个临时缓存区中（也称为模式空</description>
    </item>
    
    <item>
      <title>grep 小记</title>
      <link>https://zhixiangyuan.github.io/2018/09/25/grep-%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Tue, 25 Sep 2018 15:02:04 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2018/09/25/grep-%E5%B0%8F%E8%AE%B0/</guid>
      <description>grep -A [line num]，向下显示多少行，after-context 缩写 -B [line num]，向上显示多少行，before-context 缩写 -C [line num]，上</description>
    </item>
    
    <item>
      <title>tar &amp; scp 小记</title>
      <link>https://zhixiangyuan.github.io/2018/09/24/tar-scp-%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Mon, 24 Sep 2018 17:35:38 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2018/09/24/tar-scp-%E5%B0%8F%E8%AE%B0/</guid>
      <description>1 scp 命令 上传：scp [文件路径] [用户名]@[IP 地址]:[服务器路径] 下载：scp [用户名]@[IP 地址]:[文件路径] [本地路径] 2 tar 命</description>
    </item>
    
  </channel>
</rss>