<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>netty on 养猪场</title>
    <link>https://zhixiangyuan.github.io/tags/netty/</link>
    <description>Recent content in netty on 养猪场</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>yuanzx</copyright>
    <lastBuildDate>Thu, 23 Jan 2020 21:21:31 +0800</lastBuildDate>
    
	<atom:link href="https://zhixiangyuan.github.io/tags/netty/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Netty 如何解决 JDK 空轮训的 BUG</title>
      <link>https://zhixiangyuan.github.io/2020/01/23/netty-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3-jdk-%E7%A9%BA%E8%BD%AE%E8%AE%AD%E7%9A%84-bug/</link>
      <pubDate>Thu, 23 Jan 2020 21:21:31 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2020/01/23/netty-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3-jdk-%E7%A9%BA%E8%BD%AE%E8%AE%AD%E7%9A%84-bug/</guid>
      <description>Netty 解决空轮训的 bug 的方式很简单，通过执行阻塞 select 的方式阻塞一段时间，如果在执行完毕之后阻塞的时间小于设定的阻塞的时间，那么 selectCnt 便 +1，当达到一定次</description>
    </item>
    
    <item>
      <title>PowerOfTwoEventExecutorChooser 的优化</title>
      <link>https://zhixiangyuan.github.io/2020/01/23/poweroftwoeventexecutorchooser-%E7%9A%84%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 23 Jan 2020 20:01:38 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2020/01/23/poweroftwoeventexecutorchooser-%E7%9A%84%E4%BC%98%E5%8C%96/</guid>
      <description>Netty 内部在选择使用什么 EventLoop 的时候，会使用 Chooser 来进行判断，其实就是直接调用 Chooser 中的 next 方法，对于这个地方的实现有两种，一种是 GenericEventExecutorChooser 的实现方式，也是常用的想法</description>
    </item>
    
    <item>
      <title>判断是否是 2 的幂次的方法</title>
      <link>https://zhixiangyuan.github.io/2020/01/23/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF-2-%E7%9A%84%E5%B9%82%E6%AC%A1%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 23 Jan 2020 02:26:37 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2020/01/23/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF-2-%E7%9A%84%E5%B9%82%E6%AC%A1%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>该方法来自 Netty 源码 1 2 3 4 5 6 7 /** * @param val 需要被判断是否是 2 的幂次的数 * @return true 是 2 的幂次 / false 不是 2 的幂次 */ public static boolean isPowerOfTwo(int val) { return (val &amp;amp; -val) == val; }</description>
    </item>
    
  </channel>
</rss>