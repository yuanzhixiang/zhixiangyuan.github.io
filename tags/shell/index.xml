<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on Yuanzx Blog</title>
    <link>https://zhixiangyuan.github.io/tags/shell/</link>
    <description>Recent content in Shell on Yuanzx Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>yuanzx</copyright>
    <lastBuildDate>Sat, 09 Nov 2019 16:50:59 +0800</lastBuildDate>
    
	<atom:link href="https://zhixiangyuan.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>标准输入、标准输出与标准错误输出</title>
      <link>https://zhixiangyuan.github.io/2019/11/09/%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA%E4%B8%8E%E6%A0%87%E5%87%86%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA/</link>
      <pubDate>Sat, 09 Nov 2019 16:50:59 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/09/%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA%E4%B8%8E%E6%A0%87%E5%87%86%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA/</guid>
      <description>符号 含义 0 标准输入 1 标准输出 2 标准错误输出 0&amp;lt; 从标准输入中获取 1&amp;gt;&amp;lt;xxx&amp;gt; 将标准输出传输到 &amp;lt;xxx&amp;gt; 2&amp;gt;&amp;lt;xxx&amp;gt; 将标准错误输出输出到 &amp;lt;xxx&amp;gt; &amp;amp;&amp;gt;&amp;lt;xxx&amp;gt; 将标准输出和标准错误输出输出到 &amp;lt;xxx&amp;gt; /dev/null</description>
    </item>
    
    <item>
      <title>Shell 脚本的参数传递</title>
      <link>https://zhixiangyuan.github.io/2019/11/07/shell-%E8%84%9A%E6%9C%AC%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</link>
      <pubDate>Thu, 07 Nov 2019 09:10:09 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/07/shell-%E8%84%9A%E6%9C%AC%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</guid>
      <description>1 Shell 编程中的参数引用 引用参数 描述 0, 1, 2&amp;hellip; 传递给脚本的参数位置，可以理解为传递进去的参数是个数组，通过数组下标取得参数 * 显示所有向脚本传递的参数</description>
    </item>
    
    <item>
      <title>Unset 命令</title>
      <link>https://zhixiangyuan.github.io/2019/11/06/unset-%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Nov 2019 11:59:46 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/06/unset-%E5%91%BD%E4%BB%A4/</guid>
      <description>1 2 3 4 5 6 7 # 删除某个变量 $&amp;gt; unset &amp;lt;$变量名&amp;gt; # 或 $&amp;gt; unset -v &amp;lt;$变量名&amp;gt; # 删除某个函数 $&amp;gt; unset -f &amp;lt;$函数名&amp;gt; 案例：</description>
    </item>
    
    <item>
      <title>Env 命令</title>
      <link>https://zhixiangyuan.github.io/2019/11/06/env-%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Nov 2019 11:44:09 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/06/env-%E5%91%BD%E4%BB%A4/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 # 输出所有的环境变量 $&amp;gt; env # 删除某个环境变量 # 运行某个命令在指定的环境变量下 $&amp;gt; env -u &amp;lt;$环境变量&amp;gt; [运行的命令]</description>
    </item>
    
    <item>
      <title>常见的环境变量</title>
      <link>https://zhixiangyuan.github.io/2019/11/06/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
      <pubDate>Wed, 06 Nov 2019 11:12:45 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/06/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
      <description>变量名 描述 HOME 用户的专属目录，在 linux 中用 ~ 扩展 PATH 外部命令的搜索路径 HISTSIZE 保存历史命令记录的条数 LOGNAME 当前用户的登录名 HOSTNAME 主机的名称，许多应用程序如果要用到</description>
    </item>
    
    <item>
      <title>Bash 启动时和登出时会运行的文件</title>
      <link>https://zhixiangyuan.github.io/2019/11/06/bash-%E5%90%AF%E5%8A%A8%E6%97%B6%E5%92%8C%E7%99%BB%E5%87%BA%E6%97%B6%E4%BC%9A%E8%BF%90%E8%A1%8C%E7%9A%84%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 06 Nov 2019 11:01:55 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/06/bash-%E5%90%AF%E5%8A%A8%E6%97%B6%E5%92%8C%E7%99%BB%E5%87%BA%E6%97%B6%E4%BC%9A%E8%BF%90%E8%A1%8C%E7%9A%84%E6%96%87%E4%BB%B6/</guid>
      <description>启动文件/登出文件 描述 /etc/profile 系统范围的默认值，大部分用来设置环境（所有由 sh 衍生出的 shell 均适用） /etc/bashrc 特定于 Bash 的，系统范围函数于别名 $HOME/.bash_profile 用户定义的，环境默</description>
    </item>
    
    <item>
      <title>Export 命令</title>
      <link>https://zhixiangyuan.github.io/2019/11/06/export-%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 06 Nov 2019 10:50:16 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/06/export-%E5%91%BD%E4%BB%A4/</guid>
      <description>1 语法 export [-fnp] [{$变量名称}={$变量的值}] 2 命令作用 设置环境变量，使用 export 设置的环境变量仅改变当前进程的环境，当前进程销毁则设置的环境变量失</description>
    </item>
    
    <item>
      <title>Echo 支持的转义字符</title>
      <link>https://zhixiangyuan.github.io/2019/11/06/echo-%E6%94%AF%E6%8C%81%E7%9A%84%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Wed, 06 Nov 2019 09:51:39 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/06/echo-%E6%94%AF%E6%8C%81%E7%9A%84%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</guid>
      <description>echo 需要加上 -e 才能够处理转义字符 转义字符 含义 \a 报警符，计算机会发出一声报警音 \b 退格符（Backspace） \c 禁止尾随，这个字符后面的所有字符都</description>
    </item>
    
    <item>
      <title>Shell 中的变量</title>
      <link>https://zhixiangyuan.github.io/2019/11/05/shell-%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/</link>
      <pubDate>Tue, 05 Nov 2019 23:42:07 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/05/shell-%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/</guid>
      <description>1 变量的名称 shell 变量的名称以字母或下划线开始，后面可以接任意长度的字母、数字或下划线。 2 获取变量值 使用 $ 来获取变量值，如 $var，这种表示方式</description>
    </item>
    
    <item>
      <title>Shell 中的 #!</title>
      <link>https://zhixiangyuan.github.io/2019/11/05/shell-%E4%B8%AD%E7%9A%84-/</link>
      <pubDate>Tue, 05 Nov 2019 23:22:09 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/05/shell-%E4%B8%AD%E7%9A%84-/</guid>
      <description>1 #! 的作用 它的作用便是高所 shell 使用什么进程来执行此脚本 2 例子 2.1 echo Hello world 1 2 #!/bin/bash echo &amp;#34;Hello world!&amp;#34; 2.2 python 的 Hello world 1 2 #!/usr/bin/python print &amp;#34;Hello world!&amp;#34; 2.3 只会删除自己的脚本 1 2 3 #!/bin/rm # 这个 Hello world 打</description>
    </item>
    
    <item>
      <title>Shell 执行文件的三种方式</title>
      <link>https://zhixiangyuan.github.io/2019/11/05/shell-%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 05 Nov 2019 23:07:50 +0800</pubDate>
      
      <guid>https://zhixiangyuan.github.io/2019/11/05/shell-%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>1 Shell 执行文件的三种方式 使文件具有可执行权限，直接运行文件 直接调用命令解释器执行文件，如 sh、bash 使用 source 执行文件 1.1 前两种执行文件的方式 前两</description>
    </item>
    
  </channel>
</rss>